<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInicio.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>